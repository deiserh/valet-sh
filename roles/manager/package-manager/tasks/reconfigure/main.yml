---

- name: "fail when package {{ current_package_name }}-{{ current_package_version }} is not installed"
  fail:
    msg: "package {{ current_package_name }}-{{ current_package_version }} is not installed"
  when: (package_condition is not defined) or (package_condition == false)

- name: set package_base_path
  set_fact:
    package_base_path: "{{ base_path }}/{{ current_package_name }}/{{ current_package_version }}"
    package_startup_script: "{{ launch_daemon_prefix }}.{{ current_package_name }}-{{ current_package_version }}.plist"

- name: set base package variables
  set_fact:
    package_dist_path: "{{ package_base_path }}/dist"
    package_etc_path: "{{ package_base_path }}/etc"
    package_data_path: "{{ package_base_path }}/data"
    package_log_path: "{{ package_base_path }}/log"
    package_tmp_path: "{{ package_base_path }}/tmp"
    package_run_path: "{{ package_base_path }}/run"

- name: set additional variables
  set_fact:
    package_bin_path: "{{ package_dist_path }}/bin"
    package_sbin_path: "{{ package_dist_path }}/sbin"

- name: stop service via service-manager
  include_role:
    name: service-manager
  vars:
    service_action: stop
    service_package_name: "{{ current_package_name }}"
    service_package_version: "{{ current_package_version }}"
    service_mode: soft

- name: "include role package-{{ current_package_name }}-{{ current_package_version }}"
  include_role:
    name: "package-{{ current_package_name }}-{{ current_package_version }}"
    public: yes
  vars:
    package_action: "manifest"
  # output: package

- name: call configure.yml
  include_tasks: install/configure.yml

- name: start service via service-manager
  include_role:
    name: service-manager
  vars:
    service_action: start
    service_package_name: "{{ current_package_name }}"
    service_package_version: "{{ current_package_version }}"
