---

- tempfile:
    state: file
    suffix: temp
  register: package_yml_file_object

- set_fact:
    package_yml_file: "{{ package_yml_file_object.path }}"

- set_fact:
    package_yml_url: "{{ distil_base_url }}/{{ os_version }}/{{ package_channel }}/package.yml"

- name: "downloading {{ package_yml_url }}"
  get_url:
    url: "{{ package_yml_url }}"
    dest: "{{ package_yml_file }}"
    force: true
  register: package_yml_download_obj

- name: read package.yml
  include_vars:
    file: "{{ package_yml_file }}"


#- name: set initial package_candidate var
# set_fact:
#    package_candidate: "{{ packages[package_name + '-' + package_version] }}"

#- name: add package id to object
#  set_fact:
#    package_candidate: "{{ package_candidate|combine({'id':\"{{ package_name }}-{{ current_package_version}}\"}) }}"

- name: "fail when package {{ current_package_name }}-{{ current_package_version }} does not exist"
  fail:
    msg: "package {{ current_package_name }}-{{ current_package_version }} is not available in channel {{ package_channel }}"
  when: packages[current_package_name + '-' + current_package_version] is not defined

- name: set package_channel_info
  set_fact:
    package_channel_info: "{{ packages[current_package_name + '-' + current_package_version] }}"

- name: generate url and id for package candidate to be added
  set_fact:
    package_additional_fields:
      url: "{{ distil_base_url }}/{{ os_version }}/{{ package_channel }}/{{ current_package_name }}/{{ current_package_version }}/{{ package_channel_info.filename }}"
      id: "{{ current_package_name }}-{{ current_package_version}}"

- name: add url and id fields to package
  set_fact:
    package_candidate: "{{ package_channel_info | combine(package_additional_fields) }}"

- set_fact:
    package_candidate: "{{ package_candidate }}"
